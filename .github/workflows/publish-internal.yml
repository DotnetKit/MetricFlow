name: PR internal deployment

on:
  pull_request:
    branches: [main]
    paths: ["src/**"]
env:
  GITHUB_ARTIFACTS_FEED_URL: https://nuget.pkg.github.com/dotnetkit/index.json
  BUILD_CONFIGURATION: "Release" # set this mto the appropriate build configuration
  DOTNET_VERSION: "8.x"
  MinVerMinimumMajorMinor: "1.0"
  MinVerTagPrefix: "v"
  MinVerDefaultPreReleasePhase: "alpha-${{ github.run_number }}"

jobs:
  gh-build-and-deploy-internal:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Retrieve minVer version
      - name: Set APP_VERSION based on repo w/MinVer
        run: |
          dotnet tool install -g minver-cli -v q
          APP_VERSION=`minver`
          echo "Adding version to GITHUB_ENV: APP_VERSION=$APP_VERSION"
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      # Setup github packaged feed
      - name: dotnet nuget add source
        env:
          USERNAME: DotnetKit
        run: |
          dotnet nuget add source --username medevod --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github '${{ env.GITHUB_ARTIFACTS_FEED_URL }}'

      # Run dotnet build and package
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'  --version-suffix '${{ env.APP_VERSION }}'
          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}' --no-build --version-suffix '${{ env.APP_VERSION }}'

      # Publish the package to Azure Artifacts
      - name: "dotnet publish"
        run: dotnet nuget push --source github  --api-key  ${{ secrets.INTERNAL_PKG_NUGET_PAT }} src/DotnetKit.*/bin/Release/*.nupkg
